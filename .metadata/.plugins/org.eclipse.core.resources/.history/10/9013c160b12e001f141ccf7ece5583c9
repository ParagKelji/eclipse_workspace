package com.f8.test;

import java.util.HashMap;
import java.util.Map;

public class LambdaEx {
	
	interface Sayable {
	    public String say(String name);
	}
	
	public static void main(String[] args) {
		// Lambda expression with single parameter.
        Sayable s1=(name)->{
            return "Hello, " + name;
        };
        System.out.println(s1.say("Sonoo"));
        // You can omit function parentheses
        Sayable s2= name -> {
            return "Hello, " + name;
        };  
        System.out.println(s2.say("Sonoo"));
        Map<String, Integer> nameMap = new HashMap<>();
        Integer value = nameMap.computeIfAbsent("John", s -> s.length());
        System.out.println(value);
	}

}
